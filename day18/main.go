package main

import (
	"fmt"
	"math"
	"strings"
)

func main() {
	part1()
	part2()
}

func part1() {
	lines := strings.Split(input, "\n")

	var startPos [2]int
	var doorPos [26][2]int
	var keyPos [26][2]int

	for i, line := range lines {
		for j := 0; j < len(line); j++ {
			if line[j] == '@' {
				startPos = [2]int{i, j}
			} else if line[j] >= 'a' && line[j] <= 'z' {
				keyPos[line[j]-'a'] = [2]int{i, j}
			} else if line[j] >= 'A' && line[j] <= 'Z' {
				doorPos[line[j]-'A'] = [2]int{i, j}
			}
		}
	}

	pmemo := map[[4]int]int{}

	pathFind := func(pos [2]int, keys int, key int) int {
		pkey := [4]int{pos[0], pos[1], keys, key}
		if v, ok := pmemo[pkey]; ok {
			return v
		}

		work := [][3]int{{pos[0], pos[1], 0}}
		seen := map[[2]int]bool{}
		target := keyPos[key]
		dirs := [][2]int{{1, 0}, {0, 1}, {-1, 0}, {0, -1}}
		for len(work) > 0 {
			w := work[0]
			work = work[1:]
			k := [2]int{w[0], w[1]}
			if k == target {
				pmemo[pkey] = w[2]
				return w[2]
			}
			if seen[k] {
				continue
			}
			seen[k] = true
			for _, dir := range dirs {
				w2 := [3]int{w[0] + dir[0], w[1] + dir[1], w[2] + 1}
				if w2[0] < 0 || w2[0] >= len(lines) || w2[1] < 0 || w2[1] >= len(lines[0]) {
					continue
				}
				c := lines[w2[0]][w2[1]]
				if c == '#' {
					continue
				}
				b := 1 << uint(c-'a')
				if c >= 'a' && c <= 'z' && int(c-'a') != key && (keys&b) == 0 {
					continue
				}
				b = 1 << uint(c-'A')
				if c >= 'A' && c <= 'Z' && (keys&b) == 0 {
					continue
				}
				work = append(work, w2)
			}
		}
		pmemo[pkey] = -1
		return -1
	}

	min := math.MaxInt64

	mins := map[[3]int]int{}

	var search func([2]int, int, int)
	search = func(pos [2]int, keys int, plen int) {
		if keys == (1<<26)-1 {
			if plen < min {
				min = plen
			}
			return
		}
		if plen >= min {
			return
		}

		key := [3]int{pos[0], pos[1], keys}
		if v, ok := mins[key]; ok && v <= plen {
			return
		}
		mins[key] = plen

		for nextKey := 0; nextKey < 26; nextKey++ {
			bit := 1 << uint(nextKey)
			if keys&bit != 0 {
				continue
			}
			aplen := pathFind(pos, keys, nextKey)
			if aplen == -1 {
				continue
			}
			search(keyPos[nextKey], keys|bit, plen+aplen)
		}
	}
	search(startPos, 0, 0)
	fmt.Println(min)
}

func part2() {
	lines := strings.Split(input2, "\n")

	spcount := 0
	var startPoss [4][2]int
	var doorPos [26][2]int
	var keyPos [26][2]int

	for i, line := range lines {
		for j := 0; j < len(line); j++ {
			if line[j] == '@' {
				startPoss[spcount] = [2]int{i, j}
				spcount++
			} else if line[j] >= 'a' && line[j] <= 'z' {
				keyPos[line[j]-'a'] = [2]int{i, j}
			} else if line[j] >= 'A' && line[j] <= 'Z' {
				doorPos[line[j]-'A'] = [2]int{i, j}
			}
		}
	}

	pmemo := map[[4]int]int{}

	pathFind := func(pos [2]int, keys int, key int) int {
		pkey := [4]int{pos[0], pos[1], keys, key}
		if v, ok := pmemo[pkey]; ok {
			return v
		}

		work := [][3]int{{pos[0], pos[1], 0}}
		seen := map[[2]int]bool{}
		target := keyPos[key]
		dirs := [][2]int{{1, 0}, {0, 1}, {-1, 0}, {0, -1}}
		for len(work) > 0 {
			w := work[0]
			work = work[1:]
			k := [2]int{w[0], w[1]}
			if k == target {
				pmemo[pkey] = w[2]
				return w[2]
			}
			if seen[k] {
				continue
			}
			seen[k] = true
			for _, dir := range dirs {
				w2 := [3]int{w[0] + dir[0], w[1] + dir[1], w[2] + 1}
				if w2[0] < 0 || w2[0] >= len(lines) || w2[1] < 0 || w2[1] >= len(lines[0]) {
					continue
				}
				c := lines[w2[0]][w2[1]]
				if c == '#' {
					continue
				}
				b := 1 << uint(c-'a')
				if c >= 'a' && c <= 'z' && int(c-'a') != key && (keys&b) == 0 {
					continue
				}
				b = 1 << uint(c-'A')
				if c >= 'A' && c <= 'Z' && (keys&b) == 0 {
					continue
				}
				work = append(work, w2)
			}
		}
		pmemo[pkey] = -1
		return -1
	}

	keySegs := [4]int{}
	for i := 0; i < 26; i++ {
		for j := 0; j < 4; j++ {
			if pathFind(startPoss[j], (1<<26)-1, i) != -1 {
				keySegs[j] |= (1 << uint(i))
			}
		}
	}

	min := math.MaxInt64

	mins := map[[9]int]int{}

	var search func([4][2]int, int, int)
	search = func(pos [4][2]int, keys int, plen int) {
		if keys == (1<<26)-1 {
			if plen < min {
				min = plen
			}
			return
		}
		if plen >= min {
			return
		}

		key := [9]int{pos[0][0], pos[0][1], pos[1][0], pos[1][1], pos[2][0], pos[2][1], pos[3][0], pos[3][1], keys}
		if v, ok := mins[key]; ok && v <= plen {
			return
		}
		mins[key] = plen

		for nextKey := 0; nextKey < 26; nextKey++ {
			bit := 1 << uint(nextKey)
			if keys&bit != 0 {
				continue
			}
			var bi int
			for i := 0; i < 4; i++ {
				if keySegs[i]&bit != 0 {
					bi = i
				}
			}
			npos := pos
			npos[bi] = keyPos[nextKey]
			aplen := pathFind(pos[bi], keys, nextKey)
			if aplen == -1 {
				continue
			}
			search(npos, keys|bit, plen+aplen)
		}
	}
	search(startPoss, 0, 0)
	fmt.Println(min)
}

const input = `#################################################################################
#.............#..o..........#...........#...............#b......#...#.........#.#
#.#######.#.#.#.#.#########.###.#######.###.#########.###.###.###.#.#C#####.#.#.#
#.#...A.#.#.#.#.#.#w....#.#...#..e#.....#...#.....#...#...#...#...#.#.....#.#k..#
#.#.###.###.#.###.###.#.#.###.#####.###.#.###.#####.###.###.###.###.#####.#.###.#
#.#...#.....#...#.#...#.....#.....#...#.#...#.#...#.#...#.#.....#.#.....#.#.#...#
#.###.#########.#.#.#######.#####.###.#.###.#.#.#.#.#.###.#######.###.#.#.#.#####
#...#.#...........#.......#.....#.....#.#...#...#.#.#.......#.....#...#.#.#.#...#
###.#.###.#############.#.#############.#.###.###.#P#######.###.#.#.###.#.#.#.#.#
#...#...#.#.....#.....#.#.....#...#.....#.#.....#.......#...#...#.#.#...#.#...#.#
#.#####.#.#.###.#.###.#######.#.#.#.#####.###############.###.#####.#.###.#####.#
#.....#.#.#.#.#.#...#.#.....#.#.#.#.....#.......#.......#.#.......#.#...#.#...#.#
###.###.#.#.#.#.###.#.#.###.#.#.#.#####.#.#####.#.#####.#.#######.#.###.#.#.###.#
#...#...#.#...#.#...#.#.#...#...#.....#.#.#.#...#.#.#...#...#.....#.#...#.#.#...#
#.###.#######.#.#.###.#.###.#.#####.###.#.#.#.#.#.#.#.#####.#.###.#D###.#.#.#.###
#...#.....#...#.....#.#...#.#.#...#.#...#...#.#.#...#.....#.#.#.X.#...#.#...#...#
###.#####.#.#####.###.###.#.###.#.#.#.#######.#.###.#####.#.#.###.###.#####.###.#
#.#.....#...#...#.#...#.#.#.#...#.#.#...#.....#.#.#.#...#.#.#...#...#...#...#...#
#.#####.#####.#.###.#.#.#.#.#.###.#.###.#.#####.#.#.#.#.#.#.###.#.#####.#.###.###
#.#...#.#.....#.....#...#.#...#...#.....#.#.....#.#.#.#.#.......#.#...#.....#...#
#.#.#.#.#.###.#########.#.#####.#######.#.#.#####.#.###.#########.#.#.#########.#
#...#...#...#.#...#...#.#.#...#.......#.#.#.....#.#.#.....#...#...#.#.........#i#
#.#####.###.#.#.#.#.#####.#.#########.#.#.#####.#.#.#.#####.#######.#########.#.#
#.#...#...#.#.#.#...#.....#.........#.#.#.....#...#...#n..#..f..#.Z.#...W...#.#.#
#K#Y#.#.###.#.#.#####.#####.###.#####.#.#####.#####.###.#.#####.#.###.#.#####.#.#
#.#.#.#.#...#.#.#.#...#...#.#.#.#...#.#.#.....#.....#...#.......#.#.#.#......h#.#
#.#.#.###.#.###.#.#.#.###.#.#.#.#.#.#.#.#.#J###.#####.###########.#.#.#########.#
#.#.#.....#.#...#...#...#...#.#.#.#...#.#.#.#...#...#.....#...#g..#.#.#...#.....#
###.#######.#.###.#####.#.###.#.#.#######.###.#####.#####.#.#.#.###.#.#.###.###.#
#...#.....#.#.#...#.....#.....#.#.......#...#.#.......#.#...#...#.....#.....#...#
#.#####.###.#.#.###.#########.#.#######.#.#.#.###.###.#.#########.#####.#####.###
#.....#.....#d#...#.#...#...#.#.......#.#.#.#...#...#.#.......#.#.#...#...#.#...#
#.###.#.#####.###.#.#.#.#.#.#.###.#####.###.###.###.#.###.###.#.#.###.###.#.###.#
#.#...#...#.#.#...#.#.#.#.#...#.#.....#.#...#.#.....#...#.#.#...#...#.....#.#...#
#.#.#####.#.#.#####.#.#.#.#####.#####.#.#.#.#.#########.#.#.###.###.#####.#.#.###
#.#.....#.#.#...#...#.#.#...#.......#.#.#.#.......#...#...#...#...#.....#.#.#...#
#.#####V#.#.###.#.###.#.###.#.#####.#.#.#.#######.#.#.#####.#.###.#####.#.#U###.#
#.....#.#.....#...#...#...#.#.....#.#...#...#.....#.#.......#.#...#..v#.#.....#.#
#####.#.###########.#######.#####.#.#####.#.#######.#####.#####.#####.#.#######.#
#.....#...........................#.......#.............#.........R...#l........#
#######################################.@.#######################################
#.............#......r..#.......#...........#.........#...#.......#.....#.#.....#
#.###########.#######.###.#.###.#.#####.#.###.#######.#.#.#.###.###.#.#.#.#.#.###
#...#.......#.......#.....#.#.#...#...#.#.#...#.....#...#.#...#.....#y#...#.#...#
###.#.###.#.#######.#.#####.#.#######.#.#.#.###.###.#####.###.#######.###.#.###Q#
#...#.#...#.#.......#.#.....#.......#.#.#...#...#...#...#...#...#...#...#.#.#.#.#
#.###.#.#.###.#######.#.#######.###.#.#.#.###.#####.#.#.###.###.#.#.###.#.#.#.#.#
#.#...#.#.#.........#.#...#.....#.....#.#.#...#...#...#.#.#.....#.#.#...#.#...#.#
#.#.###.###.#######.#####.#.#.#########.#.###.#.#.#####.#.#######.#.#.#######.#.#
#q#...#.....#.....#.....#.#.#.#...#.....#...#...#.#...#.........#.#.#.#.......#.#
#.#######.###.###.#####.#.#.###.#.#.#######.#.###.#.#.#########.#.#.#.#.#######.#
#.#.....#...#.#.#.#...#.#.#.#...#.#.....#..j#.#...#.#.....#.....#.#.#.....#.....#
#.#.###.#####.#.#.###.#.#.#.#.###.#####.#.###.#.###.#####.###.###.#.#######.###.#
#.#.#.#...#...#.#.#...#...#.#...#.......#.#.#.#.....#...#...#...#.#.......#...#.#
#.#L#.###.#.###.#.#.#######.###.#########.#.#.#########.###.###.#.#######.###S#.#
#.#...#.#.#.#...#.#.#...#.......#...#...#.#.............#.#.#.#.#.#.....#...#.#.#
#.###.#.#.#.###.#.#.#.#.#.#######.#.#.#.#.#.###########.#.#.#.#.#.###.#.###.#.#.#
#...#...#...#...#.#.#.#.........#.#.#.#.#.#.#.......#.#.#.#.#...#...#.#...#.#.#.#
#.#.###.#####.#.#H#.#.#########.#.#.#N#.#.#.#.#####.#.#.#.#.#######.###.#.#.#.#.#
#.#.#...#.....#.#.#.....#...#...#.#...#.#.#.#.#...#.#.....#.#.....#...#.#.#...#.#
###.#.###.#.#####.#.#####.#.#.###.#####.#.###.#.#.#.#.#####.#.###.###.#.#######.#
#...#...#.#...#...#.#.T...#.#.#.F.#.#...#.....#.#.#.#...#...#.#...#...#...#...#.#
#.#####.#.###.#.###########.###.###.#.#########.#.#.###.#.#.###.###.###.#.#.#.#.#
#.....#.#.#u..#..z........#....t#.G...#.#.......#.#.#...#.#...#.#...#...#...#...#
###.#.#.###.###########.#########.#####.#.#####.#.#.#####.#.###.#.#######.#######
#...#s#...#.....#.....#.........#.#.....#.....#.#.#.....#.#.#...#.......#...#...#
#.###.###.###.#.#.###.#######.###.#.###########.#######.#.#.#.###.#####.#####.#.#
#.#.....#...#.#.....#.......#.....#.....#.....#.......#.#.#.#...#.#...#...#...#.#
#.#########.###############.###########.#.###.#####.###.#.#####.#.#.#####.#.###.#
#.#x......#.#...#...........#...........#.#.........#...#.#.....#...#.....#.#...#
#.#.#####.#I#.#.#.#########.#####.#####.#.###########.###.#.#######.#.#####.#.###
#.#...#...#...#...#.....#.#.#...#...#...#.............#...#.....#.#.#.......#.O.#
#.###.#.#############.#.#.#.#.#.###.#.###.###############.#####.#.#.#######.###.#
#...#.#.....#...#.....#...#.#.#.....#.#.#.#...#...#.....#..m#...#...#.....#.#...#
#.###.###.#.#.#.###.#######.#.#######.#.#.#.#.#.#.#.###.###.#.#######.###.#.#.###
#.#...#.#.#...#.....#.....#...#.....#...#.#.#...#.#...#.#...#.....#...#...#.#...#
#.#M###.#.###########.###.#####.###.###.#.#.#####.###.#.#.#######.#.###.#######.#
#.#...#.#...#..a..#...#.#.....#.#.....#.#p..#...#...#.#.#.#.......#.#...#.....#.#
#.###.#.###.#.###.#.###.###.###.#.#####.#####.#####.#.#.#.#.#######.#.###.###.#.#
#.........#...B.#.........#.....#.......#.............#...#.......E.#.....#....c#
#################################################################################`

const input2 = `#################################################################################
#.............#..o..........#...........#...............#b......#...#.........#.#
#.#######.#.#.#.#.#########.###.#######.###.#########.###.###.###.#.#C#####.#.#.#
#.#...A.#.#.#.#.#.#w....#.#...#..e#.....#...#.....#...#...#...#...#.#.....#.#k..#
#.#.###.###.#.###.###.#.#.###.#####.###.#.###.#####.###.###.###.###.#####.#.###.#
#.#...#.....#...#.#...#.....#.....#...#.#...#.#...#.#...#.#.....#.#.....#.#.#...#
#.###.#########.#.#.#######.#####.###.#.###.#.#.#.#.#.###.#######.###.#.#.#.#####
#...#.#...........#.......#.....#.....#.#...#...#.#.#.......#.....#...#.#.#.#...#
###.#.###.#############.#.#############.#.###.###.#P#######.###.#.#.###.#.#.#.#.#
#...#...#.#.....#.....#.#.....#...#.....#.#.....#.......#...#...#.#.#...#.#...#.#
#.#####.#.#.###.#.###.#######.#.#.#.#####.###############.###.#####.#.###.#####.#
#.....#.#.#.#.#.#...#.#.....#.#.#.#.....#.......#.......#.#.......#.#...#.#...#.#
###.###.#.#.#.#.###.#.#.###.#.#.#.#####.#.#####.#.#####.#.#######.#.###.#.#.###.#
#...#...#.#...#.#...#.#.#...#...#.....#.#.#.#...#.#.#...#...#.....#.#...#.#.#...#
#.###.#######.#.#.###.#.###.#.#####.###.#.#.#.#.#.#.#.#####.#.###.#D###.#.#.#.###
#...#.....#...#.....#.#...#.#.#...#.#...#...#.#.#...#.....#.#.#.X.#...#.#...#...#
###.#####.#.#####.###.###.#.###.#.#.#.#######.#.###.#####.#.#.###.###.#####.###.#
#.#.....#...#...#.#...#.#.#.#...#.#.#...#.....#.#.#.#...#.#.#...#...#...#...#...#
#.#####.#####.#.###.#.#.#.#.#.###.#.###.#.#####.#.#.#.#.#.#.###.#.#####.#.###.###
#.#...#.#.....#.....#...#.#...#...#.....#.#.....#.#.#.#.#.......#.#...#.....#...#
#.#.#.#.#.###.#########.#.#####.#######.#.#.#####.#.###.#########.#.#.#########.#
#...#...#...#.#...#...#.#.#...#.......#.#.#.....#.#.#.....#...#...#.#.........#i#
#.#####.###.#.#.#.#.#####.#.#########.#.#.#####.#.#.#.#####.#######.#########.#.#
#.#...#...#.#.#.#...#.....#.........#.#.#.....#...#...#n..#..f..#.Z.#...W...#.#.#
#K#Y#.#.###.#.#.#####.#####.###.#####.#.#####.#####.###.#.#####.#.###.#.#####.#.#
#.#.#.#.#...#.#.#.#...#...#.#.#.#...#.#.#.....#.....#...#.......#.#.#.#......h#.#
#.#.#.###.#.###.#.#.#.###.#.#.#.#.#.#.#.#.#J###.#####.###########.#.#.#########.#
#.#.#.....#.#...#...#...#...#.#.#.#...#.#.#.#...#...#.....#...#g..#.#.#...#.....#
###.#######.#.###.#####.#.###.#.#.#######.###.#####.#####.#.#.#.###.#.#.###.###.#
#...#.....#.#.#...#.....#.....#.#.......#...#.#.......#.#...#...#.....#.....#...#
#.#####.###.#.#.###.#########.#.#######.#.#.#.###.###.#.#########.#####.#####.###
#.....#.....#d#...#.#...#...#.#.......#.#.#.#...#...#.#.......#.#.#...#...#.#...#
#.###.#.#####.###.#.#.#.#.#.#.###.#####.###.###.###.#.###.###.#.#.###.###.#.###.#
#.#...#...#.#.#...#.#.#.#.#...#.#.....#.#...#.#.....#...#.#.#...#...#.....#.#...#
#.#.#####.#.#.#####.#.#.#.#####.#####.#.#.#.#.#########.#.#.###.###.#####.#.#.###
#.#.....#.#.#...#...#.#.#...#.......#.#.#.#.......#...#...#...#...#.....#.#.#...#
#.#####V#.#.###.#.###.#.###.#.#####.#.#.#.#######.#.#.#####.#.###.#####.#.#U###.#
#.....#.#.....#...#...#...#.#.....#.#...#...#.....#.#.......#.#...#..v#.#.....#.#
#####.#.###########.#######.#####.#.#####.#.#######.#####.#####.#####.#.#######.#
#.....#...........................#....@#@#.............#.........R...#l........#
#################################################################################
#.............#......r..#.......#......@#@..#.........#...#.......#.....#.#.....#
#.###########.#######.###.#.###.#.#####.#.###.#######.#.#.#.###.###.#.#.#.#.#.###
#...#.......#.......#.....#.#.#...#...#.#.#...#.....#...#.#...#.....#y#...#.#...#
###.#.###.#.#######.#.#####.#.#######.#.#.#.###.###.#####.###.#######.###.#.###Q#
#...#.#...#.#.......#.#.....#.......#.#.#...#...#...#...#...#...#...#...#.#.#.#.#
#.###.#.#.###.#######.#.#######.###.#.#.#.###.#####.#.#.###.###.#.#.###.#.#.#.#.#
#.#...#.#.#.........#.#...#.....#.....#.#.#...#...#...#.#.#.....#.#.#...#.#...#.#
#.#.###.###.#######.#####.#.#.#########.#.###.#.#.#####.#.#######.#.#.#######.#.#
#q#...#.....#.....#.....#.#.#.#...#.....#...#...#.#...#.........#.#.#.#.......#.#
#.#######.###.###.#####.#.#.###.#.#.#######.#.###.#.#.#########.#.#.#.#.#######.#
#.#.....#...#.#.#.#...#.#.#.#...#.#.....#..j#.#...#.#.....#.....#.#.#.....#.....#
#.#.###.#####.#.#.###.#.#.#.#.###.#####.#.###.#.###.#####.###.###.#.#######.###.#
#.#.#.#...#...#.#.#...#...#.#...#.......#.#.#.#.....#...#...#...#.#.......#...#.#
#.#L#.###.#.###.#.#.#######.###.#########.#.#.#########.###.###.#.#######.###S#.#
#.#...#.#.#.#...#.#.#...#.......#...#...#.#.............#.#.#.#.#.#.....#...#.#.#
#.###.#.#.#.###.#.#.#.#.#.#######.#.#.#.#.#.###########.#.#.#.#.#.###.#.###.#.#.#
#...#...#...#...#.#.#.#.........#.#.#.#.#.#.#.......#.#.#.#.#...#...#.#...#.#.#.#
#.#.###.#####.#.#H#.#.#########.#.#.#N#.#.#.#.#####.#.#.#.#.#######.###.#.#.#.#.#
#.#.#...#.....#.#.#.....#...#...#.#...#.#.#.#.#...#.#.....#.#.....#...#.#.#...#.#
###.#.###.#.#####.#.#####.#.#.###.#####.#.###.#.#.#.#.#####.#.###.###.#.#######.#
#...#...#.#...#...#.#.T...#.#.#.F.#.#...#.....#.#.#.#...#...#.#...#...#...#...#.#
#.#####.#.###.#.###########.###.###.#.#########.#.#.###.#.#.###.###.###.#.#.#.#.#
#.....#.#.#u..#..z........#....t#.G...#.#.......#.#.#...#.#...#.#...#...#...#...#
###.#.#.###.###########.#########.#####.#.#####.#.#.#####.#.###.#.#######.#######
#...#s#...#.....#.....#.........#.#.....#.....#.#.#.....#.#.#...#.......#...#...#
#.###.###.###.#.#.###.#######.###.#.###########.#######.#.#.#.###.#####.#####.#.#
#.#.....#...#.#.....#.......#.....#.....#.....#.......#.#.#.#...#.#...#...#...#.#
#.#########.###############.###########.#.###.#####.###.#.#####.#.#.#####.#.###.#
#.#x......#.#...#...........#...........#.#.........#...#.#.....#...#.....#.#...#
#.#.#####.#I#.#.#.#########.#####.#####.#.###########.###.#.#######.#.#####.#.###
#.#...#...#...#...#.....#.#.#...#...#...#.............#...#.....#.#.#.......#.O.#
#.###.#.#############.#.#.#.#.#.###.#.###.###############.#####.#.#.#######.###.#
#...#.#.....#...#.....#...#.#.#.....#.#.#.#...#...#.....#..m#...#...#.....#.#...#
#.###.###.#.#.#.###.#######.#.#######.#.#.#.#.#.#.#.###.###.#.#######.###.#.#.###
#.#...#.#.#...#.....#.....#...#.....#...#.#.#...#.#...#.#...#.....#...#...#.#...#
#.#M###.#.###########.###.#####.###.###.#.#.#####.###.#.#.#######.#.###.#######.#
#.#...#.#...#..a..#...#.#.....#.#.....#.#p..#...#...#.#.#.#.......#.#...#.....#.#
#.###.#.###.#.###.#.###.###.###.#.#####.#####.#####.#.#.#.#.#######.#.###.###.#.#
#.........#...B.#.........#.....#.......#.............#...#.......E.#.....#....c#
#################################################################################`
